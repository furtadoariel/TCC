FUNCTION_BLOCK Analyse_computational_resources
    VAR_INPUT
        Memory:    REAL; 
        CPU:    REAL; 
    END_VAR 
    VAR_OUTPUT
        Output : REAL; 
    END_VAR 
    FUZZIFY Memory
        TERM Under := (0,1) (30,1) (35,0) (70,0) (100,0);
        TERM Good := (0,0) (30,0) (35,1) (70, 1) (100,0);
        TERM Over := (0,0) (30,0) (35,0) (70, 0) (100,1);
    END_FUZZIFY 
    FUZZIFY CPU
        TERM Under := (0,1) (30,1) (35,0) (70,0) (100,0);
        TERM Good := (0,0) (30,0) (35,1) (70, 0) (100,0);
        TERM Over := (0,0) (30,0) (35,0) (70, 1) (100,1);
    END_FUZZIFY 
    DEFUZZIFY Output
        TERM underloaded := 1; 
        TERM normal := 2;
        TERM overloaded := 3; 
        ACCU:MAX;
        METHOD: COGS;
        DEFAULT := 0; 
    END_DEFUZZIFY 
    RULEBLOCK first
        AND:MIN;
        RULE 1: IF (Memory IS Good) AND (CPU IS Good) THEN (Output IS normal);
        RULE 2: IF (Memory IS Good) AND (CPU IS Under) THEN (Output IS underloaded);
        RULE 3: IF (Memory IS Good) AND (CPU IS Over) THEN (Output IS overloaded);
        RULE 4: IF (Memory IS Under) AND (CPU IS Over) THEN (Output IS overloaded);
        RULE 5: IF (Memory IS Under) AND (CPU IS Good) THEN (Output IS normal);
        RULE 6: IF (Memory IS Under) AND (CPU IS Under) THEN (Output IS underloaded);
        RULE 7: IF (Memory IS Over) AND (CPU IS Over) THEN (Output IS overloaded);
        RULE 8: IF (Memory IS Over) AND (CPU IS Good) THEN (Output IS normal);
        RULE 9: IF (Memory IS Over) AND (CPU IS Under) THEN (Output IS underloaded);
    END_RULEBLOCK 
END_FUNCTION_BLOCK
